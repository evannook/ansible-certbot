---
- block:
  - name: check if dhparam file exists
    stat:
      path: "/etc/ssl/certs/dhparam.pem"
    register: dhparam_file
  - name: generate dhparam file if not exists
    command: "openssl dhparam -out /etc/ssl/certs/dhparam.pem 4096"
    async: 3600
    when: "dhparam_file.stat.exists == False"
  - name: install packages
    apt: "name=dehydrated state=latest"
  - name: add dehydrated custom config
    copy:
      src: "99_custom.sh"
      dest: "/etc/dehydrated/conf.d/99_custom.sh"
      mode: "0644"
      owner: "root"
      group: "root"
  - name: create missing acme challenge dir
    file:
      path: "/var/lib/dehydrated/acme-challenge"
      mode: "0755"
      owner: "root"
      group: "root"
      state: "directory"
  - name: add dehydrated cronjob
    copy:
      src: "dehydrated"
      dest: "/etc/cron.daily/dehydrated"
      mode: "0755"
      owner: "root"
      group: "root"
  - name: check if we need fetch letsencrypt certs
    stat:
      path: "/var/lib/dehydrated/certs/{{ letsencrypt_domain_name  }}/fullchain.pem"
    register: certs
  - block:
      - name: setup dehydrated
        lineinfile:
          path: "/etc/dehydrated/domains.txt"
          line: "{{ letsencrypt_domain_name }}"
          create: "yes"
      - name: install nginx config
        template:
          src: "nginx_before_auth.j2"
          dest: "/etc/nginx/sites-available/{{ letsencrypt_domain_name }}"
          owner: "root"
          group: "root"
          mode: "0644"
      - name: create soft link
        file:
          src: "/etc/nginx/sites-available/{{ letsencrypt_domain_name }}"
          dest: "/etc/nginx/sites-enabled/{{ letsencrypt_domain_name }}"
          owner: "root"
          group: "root"
          state: "link"
      - name: reload nginx
        systemd: state=reloaded name=nginx
      - name: getting certs
        command: "dehydrated -c"
      - name: activate certs
        template:
          src: "nginx_after_auth.j2"
          dest: "/etc/nginx/sites-available/{{ letsencrypt_domain_name }}"
          owner: "root"
          group: "root"
          mode: "0644"
      - name: reload nginx
        systemd: state=reloaded name=nginx
    when: certs.stat.exists == False
  tags:
    - letsencrypt
